from aiogram import Router, types, F
from aiogram.types import FSInputFile
import os
from datetime import datetime
from config import VOICE_DIR
from speech_to_text import speech_to_text

router = Router()
DOWNLOAD_DIR = VOICE_DIR

# @router.message(F.audio)
# async def handle_audio(message: types.Message):
#     # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞—É–¥–∏–æ—Ñ–∞–π–ª–µ
#     audio = message.audio
#     file_id = audio.file_id
#     file_size = audio.file_size
#     duration = audio.duration
#     title = audio.title or "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è"
#     performer = audio.performer or "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å"
    
#     # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞—É–¥–∏–æ
#     await message.answer(
#         f"üéµ –ü–æ–ª—É—á–µ–Ω–æ –∞—É–¥–∏–æ!\n\n"
#         f"üìù –ù–∞–∑–≤–∞–Ω–∏–µ: {title}\n"
#         f"üé§ –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: {performer}\n"
#         f"‚è± –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {duration} —Å–µ–∫—É–Ω–¥\n"
#         f"üìä –†–∞–∑–º–µ—Ä: {file_size} –±–∞–π—Ç\n"
#         f"üÜî File ID: {file_id}"
#     )
    
#     # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
#     try:
#         bot = message.bot
#         file = await bot.get_file(file_id)
#         file_path = file.file_path

#         timestamp = datetime.now().strftime("%Y%m%d_%H%M")
#         filename = f"voice_{timestamp}.ogg"  # –ì–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–±—ã—á–Ω–æ –≤ .ogg
#         download_path = os.path.join(DOWNLOAD_DIR, filename)
        
#         # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
#         await bot.download_file(file_path, download_path)
        
#         await message.answer("‚úÖ –ê—É–¥–∏–æ—Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!")
        
#     except Exception as e:
#         await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏: {e}")

@router.message(F.voice)
async def handle_voice(message: types.Message):
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    voice = message.voice
    duration = voice.duration
    file_size = voice.file_size
    file_id = voice.file_id
    
    await message.answer(
        f"üé§ –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!\n\n"
        f"‚è± –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {duration} —Å–µ–∫—É–Ω–¥\n"
        f"üìä –†–∞–∑–º–µ—Ä: {file_size} –±–∞–π—Ç\n"
    )

    try:
        bot = message.bot
        file = await bot.get_file(file_id)
        file_path = file.file_path

        timestamp = datetime.now().strftime("%Y%m%d_%H%M")
        filename = f"voice_{timestamp}.ogg"  # –ì–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–±—ã—á–Ω–æ –≤ .ogg
        download_path = os.path.join(DOWNLOAD_DIR, filename)
        
        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
        await bot.download_file(file_path, download_path)
        
        await message.answer("‚úÖ –ê—É–¥–∏–æ—Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!")

        for split in speech_to_text():

            await message.answer(split)
        
    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏: {e}")